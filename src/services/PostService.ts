import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/dist/query/react";
import { IPost } from "../models/IPost";

export const postAPI = createApi({
  // При вызове этой функции нам необходимо передать ряд некоторых опций
  // 1. reducerPath - некоторый уникальный ключ, который будет определять
  // текущий сервис
  // 2. baseQuery - здесь используем функцию fetchBaseQuery({baseUrl: '....'}), куда передаём базовый URL
  // 3. endpoints, здесь мы будем описывать все эндпоинты, на которые будем отправлять
  // запросы и как-то менять наше состояние. Это функция, которая возвращает объект.
  // Фигурныt скобки оборачиваем в круглые({})
  reducerPath: "postAPI",
  baseQuery: fetchBaseQuery({ baseUrl: "https://jsonplaceholder.typicode.com/" }),
  endpoints: (build) => ({
    // В дженерике два типа: 1-ый - массив постов IPost[], 2-ой тип аргумента, который будет ожидать этот хук - number.
    // В данном случае будем делать пагинацию и нам необходимо указать limit
    fetchAllPosts: build.query<IPost[], number>({
      // Это функция, которая возвращает объект. Сама функция будет принимать аргументы,
      // необходимые для запроса. Это может быть тело запроса, какие-то параметры (лимит), какой-то URL.
      // Здесь мы указываем URL до конкретного эндпоинта. Он будет приплюсовываться к базовому URL.
      query: (limit: number = 5) => ({
        url: "/posts",
        params: {
          _limit: limit,
        },
      }),
    }),
  }),
});
// Нам необходимо зарегистрировать редюсер в store.ts
